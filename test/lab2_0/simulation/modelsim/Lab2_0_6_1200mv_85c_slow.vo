// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Full Version"

// DATE "12/22/2018 18:56:55"

// 
// Device: Altera EP4CE22F17C6 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Simple_Circuit (
	I1,
	I2,
	Onot,
	Oand,
	Oor);
input 	I1;
input 	I2;
output 	Onot;
output 	Oand;
output 	Oor;

// Design Ports Information
// Onot	=>  Location: PIN_L1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Oand	=>  Location: PIN_N2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Oor	=>  Location: PIN_N1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// I1	=>  Location: PIN_L2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// I2	=>  Location: PIN_K5,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("Lab2_0_6_1200mv_85c_v_slow.sdo");
// synopsys translate_on

wire \Onot~output_o ;
wire \Oand~output_o ;
wire \Oor~output_o ;
wire \I1~input_o ;
wire \I2~input_o ;
wire \G2~combout ;
wire \G3~combout ;


// Location: IOOBUF_X0_Y11_N9
cycloneive_io_obuf \Onot~output (
	.i(!\I1~input_o ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Onot~output_o ),
	.obar());
// synopsys translate_off
defparam \Onot~output .bus_hold = "false";
defparam \Onot~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y8_N23
cycloneive_io_obuf \Oand~output (
	.i(\G2~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Oand~output_o ),
	.obar());
// synopsys translate_off
defparam \Oand~output .bus_hold = "false";
defparam \Oand~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X0_Y7_N2
cycloneive_io_obuf \Oor~output (
	.i(\G3~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Oor~output_o ),
	.obar());
// synopsys translate_off
defparam \Oor~output .bus_hold = "false";
defparam \Oor~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N1
cycloneive_io_ibuf \I1~input (
	.i(I1),
	.ibar(gnd),
	.o(\I1~input_o ));
// synopsys translate_off
defparam \I1~input .bus_hold = "false";
defparam \I1~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X0_Y7_N8
cycloneive_io_ibuf \I2~input (
	.i(I2),
	.ibar(gnd),
	.o(\I2~input_o ));
// synopsys translate_off
defparam \I2~input .bus_hold = "false";
defparam \I2~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y7_N0
cycloneive_lcell_comb G2(
// Equation(s):
// \G2~combout  = (\I2~input_o  & \I1~input_o )

	.dataa(\I2~input_o ),
	.datab(gnd),
	.datac(\I1~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\G2~combout ),
	.cout());
// synopsys translate_off
defparam G2.lut_mask = 16'hA0A0;
defparam G2.sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y7_N18
cycloneive_lcell_comb G3(
// Equation(s):
// \G3~combout  = (\I2~input_o ) # (\I1~input_o )

	.dataa(\I2~input_o ),
	.datab(gnd),
	.datac(\I1~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\G3~combout ),
	.cout());
// synopsys translate_off
defparam G3.lut_mask = 16'hFAFA;
defparam G3.sum_lutc_input = "datac";
// synopsys translate_on

assign Onot = \Onot~output_o ;

assign Oand = \Oand~output_o ;

assign Oor = \Oor~output_o ;

endmodule
